# setenv.sh is autogenerated by cmake from the template setenv.sh.in

# Use this script if you want to run, test and experiment with the generated
# content directly from the build destination folder, e.g. QGIS/build-master. It
# sets up the environement to do that, so you won't have to first actually
# install it (`make install`).

# This script is also used by some tests (in particular a few pytests located in
# QGIS/pytest), while other unit tests use other mechanisms for setting up the
# environment. 

# The script can be used in one of two ways:

# 1. Change environment of calling shell. 
#
#     source ./setenv.sh
#     pytest ../pytest/test_1.py
#
# 2. Pass the command to setenv.sh as an argument
# 
#     setenv.sh pytest ../pytest/test_1.py

# TODO@thomasw: Should probably also set QGIS_PREFIX_PATH (aka application path), but I
# have postponed that because I want to first understand what effect it has. 

# TODO@thomasw: Check if there are better cmake generated variables to use below. E.g. 
# there might be a @OUTPUT_PYTHON@, etc. That will make this script more robust 
# to any future changes in the structure of the build. 

# TODO@thomasw: Set up shell auto completion so it understands that the arguments are not
# files but instead commands. 

# TODO@thomasw: Consider how to deal with this script on a different platform, e.g. Windows. 
# Should the file simply not be generated? Should there be generated different files for 
# Windows, Linux, MacOS? Should the output be so robust that it will work on all of these?
# Perhaps written in Python using some library that can handle setting up environment on 
# different platforms?

export LD_LIBRARY_PATH=@CMAKE_BINARY_DIR@/lib:$LD_LIBRARY_PATH

export PYTHONPATH=\
@CMAKE_BINARY_DIR@/output/python:\
@CMAKE_BINARY_DIR@/output/python/plugins:\
@CMAKE_SOURCE_DIR@/tests/src/python:\
$PYTHONPATH

$@
